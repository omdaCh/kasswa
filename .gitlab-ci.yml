default:
  interruptible: true
  image: node:lts-alpine

stages:
  - dependencies
  - quality
  - assemble
  - deploy

install:
  stage: dependencies
  script:
    # Install dependencies
    - npm install --prefer-offline
  cache:
    key:
      files:
        - package.json
    paths:
      - node_modules

lint:
  stage: quality
  needs: ["install"]
  script:
    - npm run lint
  cache:
    key:
      files:
        - package.json
    paths:
      - node_modules
    policy: pull

test:
  stage: quality
  needs: ["install"]
  before_script:
    # # Download Chrome
    # - apk add chromium
    # - export CHROME_BIN=/usr/bin/chromium-browser
    # - export CHROME_PATH=/usr/lib/chromium/
    # # Download Firefox
    # - apk add firefox-esr
    # - export FIREFOX_BIN=/usr/bin/firefox
    # - export FIREFOX_PATH=/usr/lib/firefox/
    # # X Server
    # - apk add xvfb
    # - export DISPLAY=:99
    # - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
     # Install Chrome dependencies
    - apk update
    - apk add chromium chromium-chromedriver
    - apk add --no-cache nss freetype freetype-dev harfbuzz ca-certificates ttf-freefont

    # Set Chrome binary path
    - export CHROME_BIN=/usr/bin/chromium-browser
    - export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
    
    # Optional: Install X virtual framebuffer if needed
    - apk add xvfb
    - export DISPLAY=:99
    - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  script:
    - npm run test -- --browsers=Headless_Chrome --no-watch
  cache:
    key:
      files:
        - package.json
    paths:
      - node_modules
    policy: pull

assemble:
  stage: assemble
  needs: ["test", "lint"]
  script:
    - npm run build
  artifacts:
    paths:
      - $CI_PROJECT_DIR/dist
  cache:
    key:
      files:
        - package.json
    paths:
      - node_modules
    policy: pull

.deploy:
  stage: deploy
  variables:
    NODE_ENV: production
  needs: ["assemble"]
  before_script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME"

deploy-dev:
  extends: .deploy
  variables:
    NODE_ENV: development
  script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME"
    - echo "Making actions to deploy to dev"
    - echo "Deployed to $CI_ENVIRONMENT_NAME"

deploy-staging:
  extends: .deploy
  rules:
    - when: manual
      allow_failure: true
  variables:
    NODE_ENV: staging
  script:
    - echo "Deploying to $CI_ENVIRONMENT_NAME"
    - echo "Making actions to deploy to staging"
    - echo "Deployed to $CI_ENVIRONMENT_NAME"